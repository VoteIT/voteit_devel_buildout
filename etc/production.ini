[app:main]
use = egg:voteit.core

#Pyramid defaults
pyramid.reload_templates = false
pyramid.debug_authorization = false
pyramid.debug_notfound = false
pyramid.debug_routematch = false
pyramid.debug_templates = false
pyramid.default_locale_name = sv
pyramid.includes =
    pyramid_mailer
    pyramid_retry
    pyramid_exclog

#Transaction manager config for package: pyramid_tm
tm.commit_veto = pyramid_tm.default_commit_veto
#ZODB config for package: pyramid_zodbconn
zodbconn.uri = zeo://%(here)s/../var/ZEO.sock?blob_dir=%(here)s/../var/blob&shared_blob_dir=true

#VoteIT/Arche settings
available_languages = en sv
arche.timezone = Europe/Stockholm
arche.salt_file = %(here)s/../var/salt.txt
#Sets cache header for static views. For performance that content should be served from a proxy or cache
arche.cache_max_age = 7200
default_poll_method = schulze
voteit.gravatar_default = monsterid
voteit.redis_url = unix://%(here)s/../var/redis.sock


arche.includes =
    arche.tweens.static_resources
    arche_introspect
    arche_hashlist
    arche_pas
    arche_tos
    arche_comments

#List any extra plugins you'll want to use here
plugins = 
    voteit.core.plugins.majority_poll
    voteit.core.plugins.gravatar_profile_image
    voteit.core.plugins.hashlist_ap
    voteit.schulze
    voteit.irl
    voteit.debate
    voteit.dutt
    voteit.core.plugins.like_button
    voteit.printable
    voteit.motion
    voteit.irl.plugins.present_users_voters
    voteit.irl.plugins.transfer_vote
    voteit.stv
    voteit.feed
    voteit.multiple_votes


voteit.feed.dir = %(here)s/../var/feeds

arche_pas.providers = 
    arche_pas.providers.facebook %(here)s/../var/facebook.json
    arche_pas.providers.google_oauth2 %(here)s/../var/google.json

#pyramid_mailer settings
mail.host = localhost
mail.port = 25
mail.default_sender = noreply@voteit.se
#mail.debug = false
#mail.username   None    SMTP username
#mail.password   None    SMTP password
#mail.tls    false   Use TLS
#mail.ssl    false   Use SSL
#mail.keyfile    None    SSL key file
#mail.certfile   None    SSL certificate file
#mail.queue_path None    Location of maildir

fanstatic.minified = True
fanstatic.bottom = True
fanstatic.bundle = True
fanstatic.versioning = True
fanstatic.recompute_hashes = False
fanstatic.rollup = True


[server:main]
use = egg:waitress#main
#host = 0.0.0.0
#port = 6543
threads = 2
unix_socket = %(here)s/../var/waitress.sock
unix_socket_perms = 666
url_scheme = https

# Begin logging configuration

[loggers]
keys = root, voteit.core, arche, exc_logger, arche_jsonlog.security.roles

[handlers]
keys = console, exc_handler, voteit_core_handler, arche_handler, roles

[formatters]
keys = generic, exc_formatter, json

[logger_root]
level = WARN
handlers = console

[logger_voteit.core]
level = WARN
handlers = voteit_core_handler
qualname = voteit.core

[logger_arche]
level = WARN
handlers = arche_handler
qualname = arche

[logger_exc_logger]
level = ERROR
handlers = exc_handler
qualname = exc_logger

[logger_arche_jsonlog.security.roles]
level = INFO
handlers = roles
qualname = arche_jsonlog.security.roles
#propagate = 0

[handler_console]
class = StreamHandler
args = (sys.stderr,)
level = NOTSET
formatter = generic

[handler_exc_handler]
class = FileHandler
args = ('%(here)s/../var/log/exceptions.log',)
level = ERROR
formatter = exc_formatter

[handler_voteit_core_handler]
class = FileHandler
args = ('%(here)s/../var/log/voteit_core.log',)
level = WARN
formatter = exc_formatter

[handler_arche_handler]
class = FileHandler
args = ('%(here)s/../var/log/arche.log',)
level = WARN
formatter = exc_formatter

[handler_roles]
class = FileHandler
args = ('%(here)s/../var/log/roles.json',)
level = INFO
formatter = json

[formatter_generic]
format = %(asctime)s %(levelname)-5.5s [%(name)s][%(threadName)s] %(message)s

[formatter_exc_formatter]
format = %(asctime)s %(message)s

[formatter_json]
format = %(message)s

# End logging configuration

